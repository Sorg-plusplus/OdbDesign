// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: matrixfile.proto

#include "matrixfile.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Odb {
namespace Lib {
namespace Protobuf {
PROTOBUF_CONSTEXPR MatrixFile_StepRecord::MatrixFile_StepRecord(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.column_)*/0u
  , /*decltype(_impl_.id_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MatrixFile_StepRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatrixFile_StepRecordDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatrixFile_StepRecordDefaultTypeInternal() {}
  union {
    MatrixFile_StepRecord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatrixFile_StepRecordDefaultTypeInternal _MatrixFile_StepRecord_default_instance_;
PROTOBUF_CONSTEXPR MatrixFile_LayerRecord::MatrixFile_LayerRecord(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dielectricname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.startname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.endname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.oldname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.addtype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.row_)*/0u
  , /*decltype(_impl_.context_)*/0
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.polarity_)*/0
  , /*decltype(_impl_.dielectrictype_)*/0
  , /*decltype(_impl_.form_)*/0
  , /*decltype(_impl_.cutop_)*/0u
  , /*decltype(_impl_.cubottom_)*/0u
  , /*decltype(_impl_.ref_)*/0u
  , /*decltype(_impl_.id_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MatrixFile_LayerRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatrixFile_LayerRecordDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatrixFile_LayerRecordDefaultTypeInternal() {}
  union {
    MatrixFile_LayerRecord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatrixFile_LayerRecordDefaultTypeInternal _MatrixFile_LayerRecord_default_instance_;
PROTOBUF_CONSTEXPR MatrixFile::MatrixFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.steps_)*/{}
  , /*decltype(_impl_.layers_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MatrixFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatrixFileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatrixFileDefaultTypeInternal() {}
  union {
    MatrixFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatrixFileDefaultTypeInternal _MatrixFile_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static ::_pb::Metadata file_level_metadata_matrixfile_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_matrixfile_2eproto[4];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_matrixfile_2eproto = nullptr;

const uint32_t TableStruct_matrixfile_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_StepRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_StepRecord, _impl_.column_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_StepRecord, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_StepRecord, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.row_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.polarity_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.dielectrictype_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.dielectricname_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.form_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.cutop_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.cubottom_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.ref_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.startname_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.endname_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.oldname_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.addtype_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile_LayerRecord, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile, _impl_.steps_),
  PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::MatrixFile, _impl_.layers_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Odb::Lib::Protobuf::MatrixFile_StepRecord)},
  { 9, -1, -1, sizeof(::Odb::Lib::Protobuf::MatrixFile_LayerRecord)},
  { 31, -1, -1, sizeof(::Odb::Lib::Protobuf::MatrixFile)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Odb::Lib::Protobuf::_MatrixFile_StepRecord_default_instance_._instance,
  &::Odb::Lib::Protobuf::_MatrixFile_LayerRecord_default_instance_._instance,
  &::Odb::Lib::Protobuf::_MatrixFile_default_instance_._instance,
};

const char descriptor_table_protodef_matrixfile_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020matrixfile.proto\022\020Odb.Lib.Protobuf\032\013en"
  "ums.proto\"\350\007\n\nMatrixFile\0226\n\005steps\030\001 \003(\0132"
  "\'.Odb.Lib.Protobuf.MatrixFile.StepRecord"
  "\0228\n\006layers\030\002 \003(\0132(.Odb.Lib.Protobuf.Matr"
  "ixFile.LayerRecord\0326\n\nStepRecord\022\016\n\006colu"
  "mn\030\001 \001(\r\022\n\n\002id\030\002 \001(\r\022\014\n\004name\030\003 \001(\t\032\257\006\n\013L"
  "ayerRecord\022\013\n\003row\030\001 \001(\r\022A\n\007context\030\002 \001(\016"
  "20.Odb.Lib.Protobuf.MatrixFile.LayerReco"
  "rd.Context\022;\n\004type\030\003 \001(\0162-.Odb.Lib.Proto"
  "buf.MatrixFile.LayerRecord.Type\022\014\n\004name\030"
  "\004 \001(\t\022,\n\010polarity\030\005 \001(\0162\032.Odb.Lib.Protob"
  "uf.Polarity\022O\n\016dielectricType\030\006 \001(\01627.Od"
  "b.Lib.Protobuf.MatrixFile.LayerRecord.Di"
  "electricType\022\026\n\016dielectricName\030\007 \001(\t\022;\n\004"
  "form\030\010 \001(\0162-.Odb.Lib.Protobuf.MatrixFile"
  ".LayerRecord.Form\022\r\n\005cuTop\030\t \001(\r\022\020\n\010cuBo"
  "ttom\030\n \001(\r\022\013\n\003ref\030\013 \001(\r\022\021\n\tstartName\030\014 \001"
  "(\t\022\017\n\007endName\030\r \001(\t\022\017\n\007oldName\030\016 \001(\t\022\017\n\007"
  "addType\030\017 \001(\t\022\n\n\002id\030\021 \001(\r\"\300\001\n\004Type\022\n\n\006Si"
  "gnal\020\000\022\017\n\013PowerGround\020\001\022\016\n\nDielectric\020\002\022"
  "\t\n\005Mixed\020\003\022\016\n\nSolderMask\020\004\022\017\n\013SolderPast"
  "e\020\005\022\016\n\nSilkScreen\020\006\022\t\n\005Drill\020\007\022\010\n\004Rout\020\010"
  "\022\014\n\010Document\020\t\022\r\n\tComponent\020\n\022\010\n\004Mask\020\013\022"
  "\023\n\017ConductivePaste\020\014\"\036\n\007Context\022\t\n\005Board"
  "\020\000\022\010\n\004Misc\020\001\"1\n\016DielectricType\022\010\n\004None\020\000"
  "\022\013\n\007Prepreg\020\001\022\010\n\004Core\020\002\"\033\n\004Form\022\t\n\005Rigid"
  "\020\000\022\010\n\004Flex\020\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_matrixfile_2eproto_deps[1] = {
  &::descriptor_table_enums_2eproto,
};
static ::_pbi::once_flag descriptor_table_matrixfile_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_matrixfile_2eproto = {
    false, false, 1060, descriptor_table_protodef_matrixfile_2eproto,
    "matrixfile.proto",
    &descriptor_table_matrixfile_2eproto_once, descriptor_table_matrixfile_2eproto_deps, 1, 3,
    schemas, file_default_instances, TableStruct_matrixfile_2eproto::offsets,
    file_level_metadata_matrixfile_2eproto, file_level_enum_descriptors_matrixfile_2eproto,
    file_level_service_descriptors_matrixfile_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_matrixfile_2eproto_getter() {
  return &descriptor_table_matrixfile_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_matrixfile_2eproto(&descriptor_table_matrixfile_2eproto);
namespace Odb {
namespace Lib {
namespace Protobuf {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MatrixFile_LayerRecord_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_matrixfile_2eproto);
  return file_level_enum_descriptors_matrixfile_2eproto[0];
}
bool MatrixFile_LayerRecord_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Signal;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::PowerGround;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Dielectric;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Mixed;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::SolderMask;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::SolderPaste;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::SilkScreen;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Drill;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Rout;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Document;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Component;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Mask;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::ConductivePaste;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Type_MIN;
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::Type_MAX;
constexpr int MatrixFile_LayerRecord::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MatrixFile_LayerRecord_Context_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_matrixfile_2eproto);
  return file_level_enum_descriptors_matrixfile_2eproto[1];
}
bool MatrixFile_LayerRecord_Context_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MatrixFile_LayerRecord_Context MatrixFile_LayerRecord::Board;
constexpr MatrixFile_LayerRecord_Context MatrixFile_LayerRecord::Misc;
constexpr MatrixFile_LayerRecord_Context MatrixFile_LayerRecord::Context_MIN;
constexpr MatrixFile_LayerRecord_Context MatrixFile_LayerRecord::Context_MAX;
constexpr int MatrixFile_LayerRecord::Context_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MatrixFile_LayerRecord_DielectricType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_matrixfile_2eproto);
  return file_level_enum_descriptors_matrixfile_2eproto[2];
}
bool MatrixFile_LayerRecord_DielectricType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord::None;
constexpr MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord::Prepreg;
constexpr MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord::Core;
constexpr MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord::DielectricType_MIN;
constexpr MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord::DielectricType_MAX;
constexpr int MatrixFile_LayerRecord::DielectricType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MatrixFile_LayerRecord_Form_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_matrixfile_2eproto);
  return file_level_enum_descriptors_matrixfile_2eproto[3];
}
bool MatrixFile_LayerRecord_Form_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MatrixFile_LayerRecord_Form MatrixFile_LayerRecord::Rigid;
constexpr MatrixFile_LayerRecord_Form MatrixFile_LayerRecord::Flex;
constexpr MatrixFile_LayerRecord_Form MatrixFile_LayerRecord::Form_MIN;
constexpr MatrixFile_LayerRecord_Form MatrixFile_LayerRecord::Form_MAX;
constexpr int MatrixFile_LayerRecord::Form_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MatrixFile_StepRecord::_Internal {
 public:
};

MatrixFile_StepRecord::MatrixFile_StepRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.MatrixFile.StepRecord)
}
MatrixFile_StepRecord::MatrixFile_StepRecord(const MatrixFile_StepRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MatrixFile_StepRecord* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.column_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.column_, &from._impl_.column_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.column_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.MatrixFile.StepRecord)
}

inline void MatrixFile_StepRecord::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.column_){0u}
    , decltype(_impl_.id_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MatrixFile_StepRecord::~MatrixFile_StepRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.MatrixFile.StepRecord)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MatrixFile_StepRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void MatrixFile_StepRecord::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MatrixFile_StepRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.MatrixFile.StepRecord)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.column_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.column_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MatrixFile_StepRecord::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 column = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Odb.Lib.Protobuf.MatrixFile.StepRecord.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MatrixFile_StepRecord::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.MatrixFile.StepRecord)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 column = 1;
  if (this->_internal_column() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_column(), target);
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Odb.Lib.Protobuf.MatrixFile.StepRecord.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.MatrixFile.StepRecord)
  return target;
}

size_t MatrixFile_StepRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.MatrixFile.StepRecord)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 column = 1;
  if (this->_internal_column() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_column());
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MatrixFile_StepRecord::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MatrixFile_StepRecord::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MatrixFile_StepRecord::GetClassData() const { return &_class_data_; }


void MatrixFile_StepRecord::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MatrixFile_StepRecord*>(&to_msg);
  auto& from = static_cast<const MatrixFile_StepRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.MatrixFile.StepRecord)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_column() != 0) {
    _this->_internal_set_column(from._internal_column());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MatrixFile_StepRecord::CopyFrom(const MatrixFile_StepRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.MatrixFile.StepRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatrixFile_StepRecord::IsInitialized() const {
  return true;
}

void MatrixFile_StepRecord::InternalSwap(MatrixFile_StepRecord* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatrixFile_StepRecord, _impl_.id_)
      + sizeof(MatrixFile_StepRecord::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(MatrixFile_StepRecord, _impl_.column_)>(
          reinterpret_cast<char*>(&_impl_.column_),
          reinterpret_cast<char*>(&other->_impl_.column_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MatrixFile_StepRecord::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_matrixfile_2eproto_getter, &descriptor_table_matrixfile_2eproto_once,
      file_level_metadata_matrixfile_2eproto[0]);
}

// ===================================================================

class MatrixFile_LayerRecord::_Internal {
 public:
};

MatrixFile_LayerRecord::MatrixFile_LayerRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
}
MatrixFile_LayerRecord::MatrixFile_LayerRecord(const MatrixFile_LayerRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MatrixFile_LayerRecord* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.dielectricname_){}
    , decltype(_impl_.startname_){}
    , decltype(_impl_.endname_){}
    , decltype(_impl_.oldname_){}
    , decltype(_impl_.addtype_){}
    , decltype(_impl_.row_){}
    , decltype(_impl_.context_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.polarity_){}
    , decltype(_impl_.dielectrictype_){}
    , decltype(_impl_.form_){}
    , decltype(_impl_.cutop_){}
    , decltype(_impl_.cubottom_){}
    , decltype(_impl_.ref_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.dielectricname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dielectricname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dielectricname().empty()) {
    _this->_impl_.dielectricname_.Set(from._internal_dielectricname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.startname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.startname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_startname().empty()) {
    _this->_impl_.startname_.Set(from._internal_startname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.endname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_endname().empty()) {
    _this->_impl_.endname_.Set(from._internal_endname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.oldname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.oldname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_oldname().empty()) {
    _this->_impl_.oldname_.Set(from._internal_oldname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.addtype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addtype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addtype().empty()) {
    _this->_impl_.addtype_.Set(from._internal_addtype(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.row_, &from._impl_.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.row_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
}

inline void MatrixFile_LayerRecord::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.dielectricname_){}
    , decltype(_impl_.startname_){}
    , decltype(_impl_.endname_){}
    , decltype(_impl_.oldname_){}
    , decltype(_impl_.addtype_){}
    , decltype(_impl_.row_){0u}
    , decltype(_impl_.context_){0}
    , decltype(_impl_.type_){0}
    , decltype(_impl_.polarity_){0}
    , decltype(_impl_.dielectrictype_){0}
    , decltype(_impl_.form_){0}
    , decltype(_impl_.cutop_){0u}
    , decltype(_impl_.cubottom_){0u}
    , decltype(_impl_.ref_){0u}
    , decltype(_impl_.id_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dielectricname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dielectricname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.startname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.startname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.endname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.oldname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.oldname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addtype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addtype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MatrixFile_LayerRecord::~MatrixFile_LayerRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MatrixFile_LayerRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.dielectricname_.Destroy();
  _impl_.startname_.Destroy();
  _impl_.endname_.Destroy();
  _impl_.oldname_.Destroy();
  _impl_.addtype_.Destroy();
}

void MatrixFile_LayerRecord::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MatrixFile_LayerRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.dielectricname_.ClearToEmpty();
  _impl_.startname_.ClearToEmpty();
  _impl_.endname_.ClearToEmpty();
  _impl_.oldname_.ClearToEmpty();
  _impl_.addtype_.ClearToEmpty();
  ::memset(&_impl_.row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.row_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MatrixFile_LayerRecord::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 row = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.row_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Context context = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_context(static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context>(val));
        } else
          goto handle_unusual;
        continue;
      // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Type type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type>(val));
        } else
          goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Odb.Lib.Protobuf.MatrixFile.LayerRecord.name"));
        } else
          goto handle_unusual;
        continue;
      // .Odb.Lib.Protobuf.Polarity polarity = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_polarity(static_cast<::Odb::Lib::Protobuf::Polarity>(val));
        } else
          goto handle_unusual;
        continue;
      // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.DielectricType dielectricType = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dielectrictype(static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType>(val));
        } else
          goto handle_unusual;
        continue;
      // string dielectricName = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_dielectricname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricName"));
        } else
          goto handle_unusual;
        continue;
      // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Form form = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_form(static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 cuTop = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.cutop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cuBottom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.cubottom_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ref = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.ref_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string startName = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_startname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Odb.Lib.Protobuf.MatrixFile.LayerRecord.startName"));
        } else
          goto handle_unusual;
        continue;
      // string endName = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_endname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Odb.Lib.Protobuf.MatrixFile.LayerRecord.endName"));
        } else
          goto handle_unusual;
        continue;
      // string oldName = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_oldname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Odb.Lib.Protobuf.MatrixFile.LayerRecord.oldName"));
        } else
          goto handle_unusual;
        continue;
      // string addType = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_addtype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Odb.Lib.Protobuf.MatrixFile.LayerRecord.addType"));
        } else
          goto handle_unusual;
        continue;
      // uint32 id = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MatrixFile_LayerRecord::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 row = 1;
  if (this->_internal_row() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_row(), target);
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Context context = 2;
  if (this->_internal_context() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_context(), target);
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Type type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Odb.Lib.Protobuf.MatrixFile.LayerRecord.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  // .Odb.Lib.Protobuf.Polarity polarity = 5;
  if (this->_internal_polarity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_polarity(), target);
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.DielectricType dielectricType = 6;
  if (this->_internal_dielectrictype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_dielectrictype(), target);
  }

  // string dielectricName = 7;
  if (!this->_internal_dielectricname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dielectricname().data(), static_cast<int>(this->_internal_dielectricname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricName");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_dielectricname(), target);
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Form form = 8;
  if (this->_internal_form() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      8, this->_internal_form(), target);
  }

  // uint32 cuTop = 9;
  if (this->_internal_cutop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_cutop(), target);
  }

  // uint32 cuBottom = 10;
  if (this->_internal_cubottom() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(10, this->_internal_cubottom(), target);
  }

  // uint32 ref = 11;
  if (this->_internal_ref() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(11, this->_internal_ref(), target);
  }

  // string startName = 12;
  if (!this->_internal_startname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_startname().data(), static_cast<int>(this->_internal_startname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Odb.Lib.Protobuf.MatrixFile.LayerRecord.startName");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_startname(), target);
  }

  // string endName = 13;
  if (!this->_internal_endname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endname().data(), static_cast<int>(this->_internal_endname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Odb.Lib.Protobuf.MatrixFile.LayerRecord.endName");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_endname(), target);
  }

  // string oldName = 14;
  if (!this->_internal_oldname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldname().data(), static_cast<int>(this->_internal_oldname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Odb.Lib.Protobuf.MatrixFile.LayerRecord.oldName");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_oldname(), target);
  }

  // string addType = 15;
  if (!this->_internal_addtype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addtype().data(), static_cast<int>(this->_internal_addtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Odb.Lib.Protobuf.MatrixFile.LayerRecord.addType");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_addtype(), target);
  }

  // uint32 id = 17;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(17, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
  return target;
}

size_t MatrixFile_LayerRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string dielectricName = 7;
  if (!this->_internal_dielectricname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dielectricname());
  }

  // string startName = 12;
  if (!this->_internal_startname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_startname());
  }

  // string endName = 13;
  if (!this->_internal_endname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endname());
  }

  // string oldName = 14;
  if (!this->_internal_oldname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldname());
  }

  // string addType = 15;
  if (!this->_internal_addtype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addtype());
  }

  // uint32 row = 1;
  if (this->_internal_row() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_row());
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Context context = 2;
  if (this->_internal_context() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_context());
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Type type = 3;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .Odb.Lib.Protobuf.Polarity polarity = 5;
  if (this->_internal_polarity() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_polarity());
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.DielectricType dielectricType = 6;
  if (this->_internal_dielectrictype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dielectrictype());
  }

  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Form form = 8;
  if (this->_internal_form() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_form());
  }

  // uint32 cuTop = 9;
  if (this->_internal_cutop() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cutop());
  }

  // uint32 cuBottom = 10;
  if (this->_internal_cubottom() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cubottom());
  }

  // uint32 ref = 11;
  if (this->_internal_ref() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ref());
  }

  // uint32 id = 17;
  if (this->_internal_id() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MatrixFile_LayerRecord::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MatrixFile_LayerRecord::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MatrixFile_LayerRecord::GetClassData() const { return &_class_data_; }


void MatrixFile_LayerRecord::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MatrixFile_LayerRecord*>(&to_msg);
  auto& from = static_cast<const MatrixFile_LayerRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_dielectricname().empty()) {
    _this->_internal_set_dielectricname(from._internal_dielectricname());
  }
  if (!from._internal_startname().empty()) {
    _this->_internal_set_startname(from._internal_startname());
  }
  if (!from._internal_endname().empty()) {
    _this->_internal_set_endname(from._internal_endname());
  }
  if (!from._internal_oldname().empty()) {
    _this->_internal_set_oldname(from._internal_oldname());
  }
  if (!from._internal_addtype().empty()) {
    _this->_internal_set_addtype(from._internal_addtype());
  }
  if (from._internal_row() != 0) {
    _this->_internal_set_row(from._internal_row());
  }
  if (from._internal_context() != 0) {
    _this->_internal_set_context(from._internal_context());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_polarity() != 0) {
    _this->_internal_set_polarity(from._internal_polarity());
  }
  if (from._internal_dielectrictype() != 0) {
    _this->_internal_set_dielectrictype(from._internal_dielectrictype());
  }
  if (from._internal_form() != 0) {
    _this->_internal_set_form(from._internal_form());
  }
  if (from._internal_cutop() != 0) {
    _this->_internal_set_cutop(from._internal_cutop());
  }
  if (from._internal_cubottom() != 0) {
    _this->_internal_set_cubottom(from._internal_cubottom());
  }
  if (from._internal_ref() != 0) {
    _this->_internal_set_ref(from._internal_ref());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MatrixFile_LayerRecord::CopyFrom(const MatrixFile_LayerRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatrixFile_LayerRecord::IsInitialized() const {
  return true;
}

void MatrixFile_LayerRecord::InternalSwap(MatrixFile_LayerRecord* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dielectricname_, lhs_arena,
      &other->_impl_.dielectricname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.startname_, lhs_arena,
      &other->_impl_.startname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.endname_, lhs_arena,
      &other->_impl_.endname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.oldname_, lhs_arena,
      &other->_impl_.oldname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addtype_, lhs_arena,
      &other->_impl_.addtype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatrixFile_LayerRecord, _impl_.id_)
      + sizeof(MatrixFile_LayerRecord::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(MatrixFile_LayerRecord, _impl_.row_)>(
          reinterpret_cast<char*>(&_impl_.row_),
          reinterpret_cast<char*>(&other->_impl_.row_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MatrixFile_LayerRecord::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_matrixfile_2eproto_getter, &descriptor_table_matrixfile_2eproto_once,
      file_level_metadata_matrixfile_2eproto[1]);
}

// ===================================================================

class MatrixFile::_Internal {
 public:
};

MatrixFile::MatrixFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.MatrixFile)
}
MatrixFile::MatrixFile(const MatrixFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MatrixFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.steps_){from._impl_.steps_}
    , decltype(_impl_.layers_){from._impl_.layers_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.MatrixFile)
}

inline void MatrixFile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.steps_){arena}
    , decltype(_impl_.layers_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MatrixFile::~MatrixFile() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.MatrixFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MatrixFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.steps_.~RepeatedPtrField();
  _impl_.layers_.~RepeatedPtrField();
}

void MatrixFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MatrixFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.MatrixFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steps_.Clear();
  _impl_.layers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MatrixFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Odb.Lib.Protobuf.MatrixFile.StepRecord steps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_steps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Odb.Lib.Protobuf.MatrixFile.LayerRecord layers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_layers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MatrixFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.MatrixFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Odb.Lib.Protobuf.MatrixFile.StepRecord steps = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_steps_size()); i < n; i++) {
    const auto& repfield = this->_internal_steps(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .Odb.Lib.Protobuf.MatrixFile.LayerRecord layers = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_layers_size()); i < n; i++) {
    const auto& repfield = this->_internal_layers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.MatrixFile)
  return target;
}

size_t MatrixFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.MatrixFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Odb.Lib.Protobuf.MatrixFile.StepRecord steps = 1;
  total_size += 1UL * this->_internal_steps_size();
  for (const auto& msg : this->_impl_.steps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Odb.Lib.Protobuf.MatrixFile.LayerRecord layers = 2;
  total_size += 1UL * this->_internal_layers_size();
  for (const auto& msg : this->_impl_.layers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MatrixFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MatrixFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MatrixFile::GetClassData() const { return &_class_data_; }


void MatrixFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MatrixFile*>(&to_msg);
  auto& from = static_cast<const MatrixFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.MatrixFile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.steps_.MergeFrom(from._impl_.steps_);
  _this->_impl_.layers_.MergeFrom(from._impl_.layers_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MatrixFile::CopyFrom(const MatrixFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.MatrixFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatrixFile::IsInitialized() const {
  return true;
}

void MatrixFile::InternalSwap(MatrixFile* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.steps_.InternalSwap(&other->_impl_.steps_);
  _impl_.layers_.InternalSwap(&other->_impl_.layers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MatrixFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_matrixfile_2eproto_getter, &descriptor_table_matrixfile_2eproto_once,
      file_level_metadata_matrixfile_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Odb::Lib::Protobuf::MatrixFile_StepRecord*
Arena::CreateMaybeMessage< ::Odb::Lib::Protobuf::MatrixFile_StepRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Odb::Lib::Protobuf::MatrixFile_StepRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::Odb::Lib::Protobuf::MatrixFile_LayerRecord*
Arena::CreateMaybeMessage< ::Odb::Lib::Protobuf::MatrixFile_LayerRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Odb::Lib::Protobuf::MatrixFile_LayerRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::Odb::Lib::Protobuf::MatrixFile*
Arena::CreateMaybeMessage< ::Odb::Lib::Protobuf::MatrixFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Odb::Lib::Protobuf::MatrixFile >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
