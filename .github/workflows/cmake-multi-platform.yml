# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "development", "main" ]
  pull_request:
    branches: [ "development" ]

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            preset: x64-release          
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            preset: linux-release              

    steps:
    - uses: actions/checkout@v3
    - uses: seanmiddleditch/gha-setup-ninja@master

    # Install vcpkg
    - name: Install vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git ${{env.VCPKG_ROOT}}
        ${{env.VCPKG_ROOT}}/bootstrap-vcpkg.sh
        
    - name: Configure
      run: cmake --preset ${{matrix.preset}}            

    - name: Build
      run: cmake --preset ${{matrix.preset}} --build  

    # - name: Test
    #   working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #   # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest --build-config ${{ matrix.build_type }}
    # run: ctest --preset ${{matrix.preset}}}
